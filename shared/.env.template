//obtain these 2 values at https://www.reddit.com/prefs/apps
REDDIT_CLIENT_ID=
REDDIT_CLIENT_SECRET=

//credentials of a reddit account, probably your bot
REDDIT_USERNAME=
REDDIT_PASSWORD=

//your http request's custom USER-AGENT header value. See how it should be constructed at https://github.com/reddit-archive/reddit/wiki/API
REDDIT_USERAGENT_STRING=

//path to your JSON file with a list of subreddits
//see subreddits.json.template for it's formatting
SUBREDDITS_PATH="./subreddits.json"


//whether we should cache the access token or not. Faster to pull an access token from fs than to query reddit api. Also prevents spamming of the reddit api
//defaults to true
CACHE_ACCESS_TOKEN=true
ACCESS_TOKEN_PATH="/tmp/reddit_access_token.json"

//a value bounded within [0, 1]. if D = the amount of time between the token's creation and it's expiration and L = TOKEN_REFRESH_LENIENCY, then the program will refresh the token after D * L time
//if this value is 1, a new token will be requested immediately after the current one expires
//if this value is 0, the program will repeatedly request new access tokens without any delay. This will spam the reddit api (don't do this.)
TOKEN_REFRESH_LENIENCY=0.99


//this program uses mongodb to record listing data
//listing data is structured but doesn't need to be compared and can be stored together as a grouping under each listing. Speed is more important anyways as I will be doing mass inserts of data at a time into the db
//therefore mongo is better than any relational database for this specific case
MONGODB_CONNECTION_STRING=

//the name of the database (that exists in MONGODB_CONNECTION_STRING) that contains a collection called "listings"
MONGODB_DATABASE_NAME=




//how many seconds between fetching new posts
NEW_POSTS_REFRESH_PERIOD=30

//how many seconds between fetching tracked posts and updating databases
//the smaller this interval, the more precise your logging of posts is
UPDATE_TRACKED_POSTS_REFRESH_PERIOD=120


//how old a post (in seconds) can be before it stops getting tracked
//86400 seconds is 24 hours
MAX_TRACKING_AGE=86400
UNTRACK_POSTS_REFRESH_PERIOD=14400

//how old a post (in seconds) can be before it gets deleted permanently
CULLING_AGE=172800
CULL_POSTS_REFRESH_PERIOD=14400

//on a page, at most how many listings to display
NUM_DISPLAY_LISTINGS=25

// database query size limits
MAX_MANYLISTINGS_LIMIT=100
MAX_MANYLISTINGS_SKIP=1000

MIN_CULLING_AGE=300

MAX_POSTS_TRACKED=10000
LOG_CLIENT_EVENTS="true"